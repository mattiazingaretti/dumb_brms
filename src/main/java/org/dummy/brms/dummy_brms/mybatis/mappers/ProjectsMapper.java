package org.dummy.brms.dummy_brms.mybatis.mappers;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.dummy.brms.dummy_brms.mybatis.pojo.dumb_brms.Projects;
import org.dummy.brms.dummy_brms.mybatis.pojo.dumb_brms.ProjectsExample;
import org.dummy.brms.dummy_brms.mybatis.pojo.dumb_brms.ProjectsKey;

public interface ProjectsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @SelectProvider(type=ProjectsSqlProvider.class, method="countByExample")
    long countByExample(ProjectsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @DeleteProvider(type=ProjectsSqlProvider.class, method="deleteByExample")
    int deleteByExample(ProjectsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @Delete({
        "delete from dumb_brms.projects",
        "where id = #{id,jdbcType=BIGINT}",
          "and user_id = #{userId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(ProjectsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @Insert({
        "insert into dumb_brms.projects (id, user_id, ",
        "project_name, last_update, ",
        "creation_datetime)",
        "values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, ",
        "#{projectName,jdbcType=VARCHAR}, #{lastUpdate,jdbcType=TIMESTAMP}, ",
        "#{creationDatetime,jdbcType=TIMESTAMP})"
    })
    int insert(Projects row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @InsertProvider(type=ProjectsSqlProvider.class, method="insertSelective")
    int insertSelective(Projects row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @SelectProvider(type=ProjectsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="project_name", property="projectName", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_update", property="lastUpdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creation_datetime", property="creationDatetime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Projects> selectByExample(ProjectsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @Select({
        "select",
        "id, user_id, project_name, last_update, creation_datetime",
        "from dumb_brms.projects",
        "where id = #{id,jdbcType=BIGINT}",
          "and user_id = #{userId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="project_name", property="projectName", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_update", property="lastUpdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creation_datetime", property="creationDatetime", jdbcType=JdbcType.TIMESTAMP)
    })
    Projects selectByPrimaryKey(ProjectsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @UpdateProvider(type=ProjectsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") Projects row, @Param("example") ProjectsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @UpdateProvider(type=ProjectsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") Projects row, @Param("example") ProjectsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @UpdateProvider(type=ProjectsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Projects row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dumb_brms.projects
     *
     * @mbg.generated Thu Jan 30 20:53:11 CET 2025
     */
    @Update({
        "update dumb_brms.projects",
        "set project_name = #{projectName,jdbcType=VARCHAR},",
          "last_update = #{lastUpdate,jdbcType=TIMESTAMP},",
          "creation_datetime = #{creationDatetime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}",
          "and user_id = #{userId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Projects row);
}